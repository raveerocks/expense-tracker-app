{"version":3,"sources":["components/UI/Card.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","components/newExpense/ExpenseForm.js","components/newExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ChartBar","barFillHeight","maxValue","Math","round","value","console","log","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaxium","max","ExpensesChart","chartDataPoints","expenses","expense","date","getMonth","amount","ExpensesFilter","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","useState","title","ExpensesList","items","length","id","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b940d8f.chunk.js","sourcesContent":["import './Card.css';\nconst Card = (props) => {\n\tconst classes = 'card ' + props.className;\n\treturn <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import './ChartBar.css';\n\nconst ChartBar = (props) => {\n\tlet barFillHeight = '0%';\n\tif (props.maxValue > 0) {\n\t\tbarFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n\t\tconsole.log(barFillHeight + '%');\n\t}\n\treturn (\n\t\t<div className='chart-bar'>\n\t\t\t<div className='chart-bar__inner'>\n\t\t\t\t<div className='chart-bar__fill' style={{ height: barFillHeight }} />\n\t\t\t</div>\n\t\t\t<div className='chart-bar__label'>{props.label}</div>\n\t\t</div>\n\t);\n};\n\nexport default ChartBar;\n","import './Chart.css';\n\nimport ChartBar from './ChartBar';\n\nconst Chart = (props) => {\n\tconst dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n\tconst totalMaxium = Math.max(...dataPointValues);\n\n\treturn (\n\t\t<div className='chart'>\n\t\t\t{props.dataPoints.map((dataPoint) => {\n\t\t\t\treturn (\n\t\t\t\t\t<ChartBar\n\t\t\t\t\t\tvalue={dataPoint.value}\n\t\t\t\t\t\tmaxValue={totalMaxium}\n\t\t\t\t\t\tlabel={dataPoint.label}\n\t\t\t\t\t\tkey={dataPoint.label}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nexport default Chart;\n","import Chart from '../Chart/Chart';\n\nconst ExpensesChart = (props) => {\n\tconst chartDataPoints = [\n\t\t{ label: 'Jan', value: 0 },\n\t\t{ label: 'Feb', value: 0 },\n\t\t{ label: 'Mar', value: 0 },\n\t\t{ label: 'Apr', value: 0 },\n\t\t{ label: 'May', value: 0 },\n\t\t{ label: 'Jun', value: 0 },\n\t\t{ label: 'Jul', value: 0 },\n\t\t{ label: 'Aug', value: 0 },\n\t\t{ label: 'Sep', value: 0 },\n\t\t{ label: 'Oct', value: 0 },\n\t\t{ label: 'Nov', value: 0 },\n\t\t{ label: 'Dec', value: 0 },\n\t];\n\n\tfor (const expense of props.expenses) {\n\t\tconst expenseMonth = expense.date.getMonth();\n\t\tchartDataPoints[expenseMonth].value += expense.amount;\n\t}\n\n\treturn <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n\tconst dropdownChangeHandler = (event) => {\n\t\tprops.onChangeFilter(event.target.value);\n\t};\n\n\treturn (\n\t\t<div className='expenses-filter'>\n\t\t\t<div className='expenses-filter__control'>\n\t\t\t\t<label>Filter by year</label>\n\t\t\t\t<select value={props.selected} onChange={dropdownChangeHandler}>\n\t\t\t\t\t<option value='2022'>2022</option>\n\t\t\t\t\t<option value='2021'>2021</option>\n\t\t\t\t\t<option value='2020'>2020</option>\n\t\t\t\t\t<option value='2019'>2019</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ExpensesFilter;\n","import './ExpenseDate.css';\nconst ExpenseDate = (props) => {\n\tconst month = props.date.toLocaleString('en-US', { month: 'long' });\n\tconst day = props.date.toLocaleString('en-US', { day: '2-digit' });\n\tconst year = props.date.getFullYear();\n\treturn (\n\t\t<div className='expense-date'>\n\t\t\t<div className='expense-date__month'>{month}</div>\n\t\t\t<div className='expense-date__year'>{year}</div>\n\t\t\t<div className='expense-date__day'>{day}</div>\n\t\t</div>\n\t);\n};\n\nexport default ExpenseDate;\n","import './ExpenseItem.css';\n\nimport React, { useState } from 'react';\n\nimport Card from '../UI/Card';\nimport ExpenseDate from './ExpenseDate';\n\nconst ExpenseItem = (props) => {\n\tconst [title, setTitle] = useState(props.title);\n\n\treturn (\n\t\t<li>\n\t\t\t<Card className='expense-item'>\n\t\t\t\t<ExpenseDate date={props.date} />\n\t\t\t\t<div className='expense-item__description'>\n\t\t\t\t\t<h2>{title}</h2>\n\t\t\t\t\t<div className='expense-item__price'>${props.amount}</div>\n\t\t\t\t</div>\n\t\t\t</Card>\n\t\t</li>\n\t);\n};\n\nexport default ExpenseItem;\n","import './ExpensesList.css';\n\nimport ExpenseItem from './ExpenseItem';\n\nconst ExpensesList = (props) => {\n\tif (props.items.length === 0) {\n\t\treturn <h2 className='expenses-list__fallback'>Found no expenses.</h2>;\n\t}\n\n\treturn (\n\t\t<ul className='expenses-list'>\n\t\t\t{props.items.map((expense) => (\n\t\t\t\t<ExpenseItem\n\t\t\t\t\tkey={expense.id}\n\t\t\t\t\ttitle={expense.title}\n\t\t\t\t\tamount={expense.amount}\n\t\t\t\t\tdate={expense.date}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</ul>\n\t);\n};\n\nexport default ExpensesList;\n","import './Expenses.css';\n\nimport React, { useState } from 'react';\n\nimport Card from '../UI/Card';\nimport ExpensesChart from './ExpensesChart';\nimport ExpensesFilter from './ExpensesFilter';\nimport ExpensesList from './ExpensesList';\n\nconst Expenses = (props) => {\n\tconst [filteredYear, setFilteredYear] = useState('2021');\n\n\tconst filterChangeHandler = (selectedYear) => {\n\t\tsetFilteredYear(selectedYear);\n\t};\n\n\tconst filteredExpenses = props.items.filter((expense) => {\n\t\treturn expense.date.getFullYear().toString() === filteredYear;\n\t});\n\n\treturn (\n\t\t<Card className='expenses'>\n\t\t\t<ExpensesFilter\n\t\t\t\tselected={filteredYear}\n\t\t\t\tonChangeFilter={filterChangeHandler}\n\t\t\t/>\n\t\t\t<ExpensesChart expenses={filteredExpenses} />\n\t\t\t<ExpensesList items={filteredExpenses} />\n\t\t</Card>\n\t);\n};\n\nexport default Expenses;\n","import './ExpenseForm.css';\n\nimport React, { useState } from 'react';\n\nconst ExpenseForm = (props) => {\n\tconst [enteredTitle, setEnteredTitle] = useState('');\n\tconst [enteredAmount, setEnteredAmount] = useState('');\n\tconst [enteredDate, setEnteredDate] = useState('');\n\n\tconst titleChangeHandler = (event) => {\n\t\tsetEnteredTitle(event.target.value);\n\t};\n\n\tconst amountChangeHandler = (event) => {\n\t\tsetEnteredAmount(event.target.value);\n\t};\n\n\tconst dateChangeHandler = (event) => {\n\t\tsetEnteredDate(event.target.value);\n\t};\n\n\tconst submitHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tconst expenseData = {\n\t\t\ttitle: enteredTitle,\n\t\t\tamount: enteredAmount,\n\t\t\tdate: new Date(enteredDate),\n\t\t};\n\t\tprops.onSaveExpenseData(expenseData);\n\t\tsetEnteredTitle('');\n\t\tsetEnteredAmount('');\n\t\tsetEnteredDate('');\n\t};\n\n\treturn (\n\t\t<form onSubmit={submitHandler}>\n\t\t\t<div className='new-expense__controls'>\n\t\t\t\t<div className='new-expense__control'>\n\t\t\t\t\t<label>Title</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tvalue={enteredTitle}\n\t\t\t\t\t\tonChange={titleChangeHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='new-expense__control'>\n\t\t\t\t\t<label>Amount</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tvalue={enteredAmount}\n\t\t\t\t\t\tmin='0.01'\n\t\t\t\t\t\tstep='0.01'\n\t\t\t\t\t\tonChange={amountChangeHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='new-expense__control'>\n\t\t\t\t\t<label>Date</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tvalue={enteredDate}\n\t\t\t\t\t\tmin='2019-01-01'\n\t\t\t\t\t\tmax='2022-12-31'\n\t\t\t\t\t\tonChange={dateChangeHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='new-expense__actions'>\n\t\t\t\t<button type='button' onClick={props.onCancel}>\n\t\t\t\t\tCancel\n\t\t\t\t</button>\n\t\t\t\t<button type='submit'>Add Expese</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default ExpenseForm;\n","import './NewExpense.css';\nimport './ExpenseForm';\n\nimport React, { useState } from 'react';\n\nimport ExpenseForm from './ExpenseForm';\n\nconst NewExpense = (props) => {\n\tconst [isEditing, setIsEditing] = useState(false);\n\n\tconst onSaveExpenseDataHandler = (enteredExpenseData) => {\n\t\tconst expenseData = {\n\t\t\t...enteredExpenseData,\n\t\t\tid: Math.random().toString(),\n\t\t};\n\t\tprops.onAddExpense(expenseData);\n\t\tsetIsEditing(false);\n\t};\n\n\tconst startEditingHandler = () => {\n\t\tsetIsEditing(true);\n\t};\n\n\tconst stopEditingHandler = () => {\n\t\tsetIsEditing(false);\n\t};\n\n\treturn (\n\t\t<div className='new-expense'>\n\t\t\t{!isEditing && (\n\t\t\t\t<button onClick={startEditingHandler}> Add New Expense</button>\n\t\t\t)}\n\t\t\t{isEditing && (\n\t\t\t\t<ExpenseForm\n\t\t\t\t\tonSaveExpenseData={onSaveExpenseDataHandler}\n\t\t\t\t\tonCancel={stopEditingHandler}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default NewExpense;\n","import React, { useState } from 'react';\n\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/newExpense/NewExpense';\n\nconst DUMMY_EXPENSES = [\n\t{\n\t\tid: 'e1',\n\t\ttitle: 'New TV',\n\t\tamount: 179.88,\n\t\tdate: new Date(2021, 1, 2),\n\t},\n\t{\n\t\tid: 'e2',\n\t\ttitle: 'X Box',\n\t\tamount: 404.99,\n\t\tdate: new Date(2020, 2, 9),\n\t},\n\t{\n\t\tid: 'e3',\n\t\ttitle: 'Bluetooth',\n\t\tamount: 90.93,\n\t\tdate: new Date(2021, 5, 7),\n\t},\n\t{\n\t\tid: 'e4',\n\t\ttitle: 'Wireless Earbuds',\n\t\tamount: 120.65,\n\t\tdate: new Date(2020, 7, 8),\n\t},\n];\n\nconst App = () => {\n\tconst [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n\tconst addExpenseHandler = (expense) => {\n\t\tsetExpenses((prevExpenses) => {\n\t\t\treturn [expense, ...prevExpenses];\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<NewExpense onAddExpense={addExpenseHandler} />\n\t\t\t<Expenses items={expenses} />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import './index.css';\n\nimport App from './App';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}